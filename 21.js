webpackJsonp([21],{

/***/ "./src/sections/flock-settings.md":
/***/ (function(module, exports) {

module.exports = "# Settings\n\n```js\nimport p5 from 'p5'\n\nconst createRuleSlider = (p, key, config) => ({\n  active: p.createCheckbox(key, config.active),\n  radius: p.createSlider(0, config.radius * 2, config.radius),\n  coefficient: p.createSlider(\n    0,\n    config.coefficient * 2,\n    config.coefficient,\n    0.0001 // step size\n  ),\n})\n\nconst readSetting = ({ radius, coefficient, active }) => ({\n  radius: radius.value(),\n  coefficient: coefficient.value(),\n  active: active.checked(),\n})\n\nclass Settings {\n  constructor(props) {\n    this.rules = props.rules\n    this.world = props.world\n    this.p = props.p\n    this.position = new p5.Vector(20, 0)\n    this.initSliders()\n  }\n\n  nextPosition() {\n    return this.position.add(0, 20).copy()\n  }\n\n  update(simulation) {\n    this.rules.separation = readSetting(this.controls.separation)\n    this.rules.alignment = readSetting(this.controls.alignment)\n    this.rules.cohesion = readSetting(this.controls.cohesion)\n    this.rules.debug.active = this.controls.debug.checked()\n    this.controls.count.html(`count: ${simulation.world.entities.length}`)\n  }\n\n  initSliders() {\n    this.controls = {\n      separation: createRuleSlider(this.p, 'separation', this.rules.separation),\n      alignment: createRuleSlider(this.p, 'alignment', this.rules.alignment),\n      cohesion: createRuleSlider(this.p, 'cohesion', this.rules.cohesion),\n      debug: this.p.createCheckbox('debug', this.rules.debug.active),\n      count: this.p.createDiv(`count: ${this.world.entities.length}`),\n    }\n\n    this.render([\n      this.controls.count,\n      this.controls.separation.active,\n      this.controls.separation.radius,\n      this.controls.separation.coefficient,\n      this.controls.alignment.active,\n      this.controls.alignment.radius,\n      this.controls.alignment.coefficient,\n      this.controls.cohesion.active,\n      this.controls.cohesion.radius,\n      this.controls.cohesion.coefficient,\n      this.controls.debug,\n    ])\n  }\n\n  render(elements) {\n    elements.forEach(element => {\n      const { x, y } = this.nextPosition()\n      element.position(x, y)\n    })\n  }\n}\n\nexport default Settings\n\n```\n"

/***/ })

});
//# sourceMappingURL=21.js.map