webpackJsonp([19],{

/***/ "./src/sections/flock-summary.md":
/***/ (function(module, exports) {

module.exports = "# Wrapping\n\n## Example\n\nWrap boids across edges\n\n```code\n<P5Wrapper\n  sketch={p => {\n    // parameters\n    const dimensions = p.createVector(600, 400)\n    const center = dimensions.copy().div(2)\n    const settings = new Settings({\n      p,\n      world: {\n        dimensions,\n        center,\n        entities: R.times(R.identity, 25),\n      },\n      rules: {\n        debug: { active: true },\n        separation: { coefficient: 0.3, radius: 40, active: true },\n        alignment: { coefficient: 0.02, radius: 60, active: true },\n        cohesion: { coefficient: 0.05, radius: 80, active: true },\n      }\n    })\n    const simulation = {\n      world: new World(settings.world),\n      engine: new Engine(settings.rule),\n      settings,\n    }\n\n    p.setup = function() {\n      // setup canvas\n      const { x, y } = settings.world.dimensions\n      p.createCanvas(x, y, p.P2D)\n\n\n      // init boids\n      const initBoid = () =>  new Boid({\n        p,\n        position: simulation.settings.world.center.copy(),\n        rules: simulation.settings.rules,\n      })\n      simulation.world.entities = R.times( initBoid, simulation.world.entities.length )\n    }\n\n\n    const update = (flock) => {\n      flock.forEach( boid => boid.update() )\n    }\n\n    const render = (debug, flock) => {\n      if (debug.active) {\n        flock.map(Art.debugBoid(p))\n        flock.map(Art.debugMotion(p))\n      }\n      flock.map(Art.boid(p))\n    }\n\n    // draw loop / rendering\n    p.draw = function() {\n      const { engine, world, settings } = simulation\n      p.background(p.color('white'))\n      // get latest input settings\n      settings.update(simulation)\n      // update engine according to settings\n      engine.update(world.entities)\n      world.update()\n      // render world\n      render(settings.rules.debug, world.entities)\n      // update and flush\n      update(world.entities)\n    }\n  }}\n/>\n```\n"

/***/ })

});
//# sourceMappingURL=19.js.map